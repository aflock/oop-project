To Do:
-Deal with for(o:N) type loops in C++
-Final methods == const?
-change printStringDescendants to visitor methods
-Ask Grimm if we can rely on the same ordering of nodes in AST (ie. is methodsDeclaration)
-Manually do work of printStringDescendants with visitMethods()

-Ask Grimm: When we declare a __Array in our .h, do we need to specify size? NO

-Deal with matrices (arrays of arrays? OF ARRAYS??)
-be observant of use of string/class/object

-remember all classes need a pointer to a vtable
-all methods for the class need to be declared in the vtable
-entry to main method hs input class, but what if methods in other classes
-need a data structure to store dependancies
-what structure will we use for the vtable
-have to figure out how to solve dependancies
-all classes
-c++ needs to deal with ugly castes
-size cannot be known statically

-DONT WORRY ABOUT VISIBILITY

i.get import statements
ii.generate AST for all .java files

1. Build Inheritance Tree
 -Create list of mentioned classes and where it is located.(input for inheritance tree);
 -Create list of "places to look" for possible files
    Q_ SHOULD ALL CLASSES IN IMPORTS BE MADE INTO CLASS STRUCTS,
    OR ONLY THOSE INSTANTIATED IN A METHOD _Q
    A_make ALL the structs!

XX2. Go through input files, create Bubbles for each class declaration
  -these Bubbles contain
        -name
        -methods
        -data fields
        -children
        -parents
            -if parents exsist in list of classes seen, point to it
            -else, create a new class node and later fill it in

3. Construct Vtables using the inheritance tree we just made ^^
    -start at 'Object' and dfs:
        -pass down vtable
        -over-write methods as needed

    --By here, we have Vtables for all classes--

4. Create structs for each class
    -associate data fields


V_V_V_V_V___AFTERTHOUGHTS___V_V_V_V_V
-Do we need to deal with Excpetions in our Inheritance Tree


TO DO FOR SATURDAY:
For .H:
-keep track of which methods are overwritten (insert tab character at end of each overwritten method in vtable)
-In Struct class{
    -data fields
    -constructors
    Methods:
    -static
    -vtable
    -vtable constructor
