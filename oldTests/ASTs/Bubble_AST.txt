Java to C++ Translator, v. 2.1.1, My Group
Processing helper/Bubble.java ...
CompilationUnit(
  PackageDeclaration(
    null,
    QualifiedIdentifier(
      "xtc",
      "oop",
      "helper"
    )
  ),
  ImportDeclaration(
    null,
    QualifiedIdentifier(
      "java",
      "util",
      "ArrayList"
    ),
    null
  ),
  ClassDeclaration(
    Modifiers(
      Modifier(
        "public"
      )
    ),
    "Bubble",
    null,
    null,
    null,
    ClassBody(
      FieldDeclaration(
        Modifiers(),
        Type(
          QualifiedIdentifier(
            "String"
          ),
          null
        ),
        Declarators(
          Declarator(
            "name",
            null,
            null
          )
        )
      ),
      FieldDeclaration(
        Modifiers(),
        Type(
          QualifiedIdentifier(
            "String"
          ),
          Dimensions(
            "["
          )
        ),
        Declarators(
          Declarator(
            "methods",
            null,
            null
          )
        )
      ),
      FieldDeclaration(
        Modifiers(),
        Type(
          QualifiedIdentifier(
            "String"
          ),
          Dimensions(
            "["
          )
        ),
        Declarators(
          Declarator(
            "dataFields",
            null,
            null
          )
        )
      ),
      FieldDeclaration(
        Modifiers(),
        Type(
          QualifiedIdentifier(
            "String"
          ),
          null
        ),
        Declarators(
          Declarator(
            "packageName",
            null,
            null
          )
        )
      ),
      FieldDeclaration(
        Modifiers(),
        Type(
          QualifiedIdentifier(
            "Bubble"
          ),
          null
        ),
        Declarators(
          Declarator(
            "parent",
            null,
            null
          )
        )
      ),
      FieldDeclaration(
        Modifiers(),
        Type(
          QualifiedIdentifier(
            "String"
          ),
          Dimensions(
            "["
          )
        ),
        Declarators(
          Declarator(
            "children",
            null,
            null
          )
        )
      ),
      FieldDeclaration(
        Modifiers(),
        Type(
          QualifiedIdentifier(
            "Bubble"
          ),
          Dimensions(
            "["
          )
        ),
        Declarators(
          Declarator(
            "bChildren",
            null,
            null
          )
        )
      ),
      FieldDeclaration(
        Modifiers(),
        Type(
          InstantiatedType(
            TypeInstantiation(
              "ArrayList",
              TypeArguments(
                Type(
                  QualifiedIdentifier(
                    "String"
                  ),
                  null
                )
              )
            )
          ),
          null
        ),
        Declarators(
          Declarator(
            "vtable",
            null,
            null
          )
        )
      ),
      FieldDeclaration(
        Modifiers(),
        Type(
          QualifiedIdentifier(
            "String"
          ),
          Dimensions(
            "["
          )
        ),
        Declarators(
          Declarator(
            "constructors",
            null,
            null
          )
        )
      ),
      ConstructorDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        "Bubble",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              null
            ),
            null,
            "name",
            null
          ),
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              Dimensions(
                "["
              )
            ),
            null,
            "methods",
            null
          ),
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              Dimensions(
                "["
              )
            ),
            null,
            "dataFields",
            null
          ),
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Bubble"
              ),
              null
            ),
            null,
            "parent",
            null
          ),
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              Dimensions(
                "["
              )
            ),
            null,
            "children",
            null
          ),
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              null
            ),
            null,
            "packageName",
            null
          ),
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              Dimensions(
                "["
              )
            ),
            null,
            "constructors",
            null
          )
        ),
        null,
        Block(
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "name"
              ),
              "=",
              PrimaryIdentifier(
                "name"
              )
            )
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "packageName"
              ),
              "=",
              PrimaryIdentifier(
                "packageName"
              )
            )
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "methods"
              ),
              "=",
              PrimaryIdentifier(
                "methods"
              )
            )
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "dataFields"
              ),
              "=",
              PrimaryIdentifier(
                "dataFields"
              )
            )
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "parent"
              ),
              "=",
              PrimaryIdentifier(
                "parent"
              )
            )
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "children"
              ),
              "=",
              PrimaryIdentifier(
                "children"
              )
            )
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "vtable"
              ),
              "=",
              NewClassExpression(
                null,
                null,
                InstantiatedType(
                  TypeInstantiation(
                    "ArrayList",
                    TypeArguments(
                      Type(
                        QualifiedIdentifier(
                          "String"
                        ),
                        null
                      )
                    )
                  )
                ),
                Arguments(),
                null
              )
            )
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "constructors"
              ),
              "=",
              CallExpression(
                null,
                null,
                "trim",
                Arguments(
                  PrimaryIdentifier(
                    "constructors"
                  )
                )
              )
            )
          )
        )
      ),
      ConstructorDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        "Bubble",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              null
            ),
            null,
            "name",
            null
          ),
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              null
            ),
            null,
            "child",
            null
          )
        ),
        null,
        Block(
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "name"
              ),
              "=",
              PrimaryIdentifier(
                "name"
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "child"
              ),
              "!=",
              NullLiteral()
            ),
            Block(
              FieldDeclaration(
                Modifiers(),
                Type(
                  QualifiedIdentifier(
                    "String"
                  ),
                  null
                ),
                Declarators(
                  Declarator(
                    "temp",
                    Dimensions(
                      "["
                    ),
                    ArrayInitializer(
                      PrimaryIdentifier(
                        "child"
                      )
                    )
                  )
                )
              ),
              ExpressionStatement(
                Expression(
                  SelectionExpression(
                    ThisExpression(
                      null
                    ),
                    "children"
                  ),
                  "=",
                  PrimaryIdentifier(
                    "temp"
                  )
                )
              )
            ),
            null
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "vtable"
              ),
              "=",
              NewClassExpression(
                null,
                null,
                InstantiatedType(
                  TypeInstantiation(
                    "ArrayList",
                    TypeArguments(
                      Type(
                        QualifiedIdentifier(
                          "String"
                        ),
                        null
                      )
                    )
                  )
                ),
                Arguments(),
                null
              )
            )
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "methods"
              ),
              "=",
              NullLiteral()
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        VoidType(),
        "setConstructors",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              Dimensions(
                "["
              )
            ),
            null,
            "constructors",
            null
          )
        ),
        null,
        null,
        Block(
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "constructors"
              ),
              "=",
              CallExpression(
                null,
                null,
                "trim",
                Arguments(
                  PrimaryIdentifier(
                    "constructors"
                  )
                )
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "String"
          ),
          Dimensions(
            "["
          )
        ),
        "trim",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              Dimensions(
                "["
              )
            ),
            null,
            "constructors",
            null
          )
        ),
        null,
        null,
        Block(
          FieldDeclaration(
            Modifiers(),
            Type(
              PrimitiveType(
                "int"
              ),
              null
            ),
            Declarators(
              Declarator(
                "index",
                null,
                IntegerLiteral(
                  "0"
                )
              )
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              Dimensions(
                "["
              )
            ),
            Declarators(
              Declarator(
                "temp",
                null,
                NewArrayExpression(
                  QualifiedIdentifier(
                    "String"
                  ),
                  ConcreteDimensions(
                    SelectionExpression(
                      PrimaryIdentifier(
                        "constructors"
                      ),
                      "length"
                    )
                  ),
                  null,
                  null
                )
              )
            )
          ),
          ForStatement(
            BasicForControl(
              Modifiers(),
              Type(
                PrimitiveType(
                  "int"
                ),
                null
              ),
              Declarators(
                Declarator(
                  "i",
                  null,
                  IntegerLiteral(
                    "0"
                  )
                )
              ),
              RelationalExpression(
                PrimaryIdentifier(
                  "i"
                ),
                "<",
                SelectionExpression(
                  PrimaryIdentifier(
                    "constructors"
                  ),
                  "length"
                )
              ),
              ExpressionList(
                PostfixExpression(
                  PrimaryIdentifier(
                    "i"
                  ),
                  "++"
                )
              )
            ),
            Block(
              FieldDeclaration(
                Modifiers(),
                Type(
                  QualifiedIdentifier(
                    "String"
                  ),
                  Dimensions(
                    "["
                  )
                ),
                Declarators(
                  Declarator(
                    "a",
                    null,
                    CallExpression(
                      SubscriptExpression(
                        PrimaryIdentifier(
                          "constructors"
                        ),
                        PrimaryIdentifier(
                          "i"
                        )
                      ),
                      null,
                      "split",
                      Arguments(
                        StringLiteral(
                          "\" \""
                        )
                      )
                    )
                  )
                )
              ),
              ForStatement(
                BasicForControl(
                  Modifiers(),
                  Type(
                    PrimitiveType(
                      "int"
                    ),
                    null
                  ),
                  Declarators(
                    Declarator(
                      "j",
                      null,
                      IntegerLiteral(
                        "0"
                      )
                    )
                  ),
                  RelationalExpression(
                    PrimaryIdentifier(
                      "j"
                    ),
                    "<",
                    SelectionExpression(
                      PrimaryIdentifier(
                        "a"
                      ),
                      "length"
                    )
                  ),
                  ExpressionList(
                    PostfixExpression(
                      PrimaryIdentifier(
                        "j"
                      ),
                      "++"
                    )
                  )
                ),
                Block(
                  ConditionalStatement(
                    CallExpression(
                      SubscriptExpression(
                        PrimaryIdentifier(
                          "a"
                        ),
                        PrimaryIdentifier(
                          "j"
                        )
                      ),
                      null,
                      "startsWith",
                      Arguments(
                        SelectionExpression(
                          ThisExpression(
                            null
                          ),
                          "name"
                        )
                      )
                    ),
                    Block(
                      ExpressionStatement(
                        Expression(
                          SubscriptExpression(
                            PrimaryIdentifier(
                              "temp"
                            ),
                            PostfixExpression(
                              PrimaryIdentifier(
                                "index"
                              ),
                              "++"
                            )
                          ),
                          "=",
                          SubscriptExpression(
                            PrimaryIdentifier(
                              "constructors"
                            ),
                            PrimaryIdentifier(
                              "i"
                            )
                          )
                        )
                      ),
                      BreakStatement(
                        null
                      )
                    ),
                    null
                  )
                )
              )
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              Dimensions(
                "["
              )
            ),
            Declarators(
              Declarator(
                "result",
                null,
                NewArrayExpression(
                  QualifiedIdentifier(
                    "String"
                  ),
                  ConcreteDimensions(
                    PrimaryIdentifier(
                      "index"
                    )
                  ),
                  null,
                  null
                )
              )
            )
          ),
          ForStatement(
            BasicForControl(
              Modifiers(),
              Type(
                PrimitiveType(
                  "int"
                ),
                null
              ),
              Declarators(
                Declarator(
                  "i",
                  null,
                  IntegerLiteral(
                    "0"
                  )
                )
              ),
              RelationalExpression(
                PrimaryIdentifier(
                  "i"
                ),
                "<",
                PrimaryIdentifier(
                  "index"
                )
              ),
              ExpressionList(
                PostfixExpression(
                  PrimaryIdentifier(
                    "i"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                Expression(
                  SubscriptExpression(
                    PrimaryIdentifier(
                      "result"
                    ),
                    PrimaryIdentifier(
                      "i"
                    )
                  ),
                  "=",
                  SubscriptExpression(
                    PrimaryIdentifier(
                      "temp"
                    ),
                    PrimaryIdentifier(
                      "i"
                    )
                  )
                )
              )
            )
          ),
          ReturnStatement(
            PrimaryIdentifier(
              "result"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "String"
          ),
          Dimensions(
            "["
          )
        ),
        "getConstructors",
        FormalParameters(),
        null,
        null,
        Block(
          ReturnStatement(
            SelectionExpression(
              ThisExpression(
                null
              ),
              "constructors"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        VoidType(),
        "setPackageName",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              null
            ),
            null,
            "name",
            null
          )
        ),
        null,
        null,
        Block(
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "packageName"
              ),
              "=",
              PrimaryIdentifier(
                "name"
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "String"
          ),
          null
        ),
        "getPackageName",
        FormalParameters(),
        null,
        null,
        Block(
          ReturnStatement(
            SelectionExpression(
              ThisExpression(
                null
              ),
              "packageName"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        VoidType(),
        "setMethods",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              Dimensions(
                "["
              )
            ),
            null,
            "methods",
            null
          )
        ),
        null,
        null,
        Block(
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "methods"
              ),
              "==",
              NullLiteral()
            ),
            Block(
              ReturnStatement(
                null
              )
            ),
            null
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "methods"
              ),
              "=",
              PrimaryIdentifier(
                "methods"
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "String"
          ),
          Dimensions(
            "["
          )
        ),
        "getMethods",
        FormalParameters(),
        null,
        null,
        Block(
          ReturnStatement(
            SelectionExpression(
              ThisExpression(
                null
              ),
              "methods"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        VoidType(),
        "setVtable",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              InstantiatedType(
                TypeInstantiation(
                  "ArrayList",
                  TypeArguments(
                    Type(
                      QualifiedIdentifier(
                        "String"
                      ),
                      null
                    )
                  )
                )
              ),
              null
            ),
            null,
            "vtable",
            null
          )
        ),
        null,
        null,
        Block(
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "vtable"
              ),
              "==",
              NullLiteral()
            ),
            Block(
              ReturnStatement(
                null
              )
            ),
            null
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "vtable"
              ),
              "=",
              PrimaryIdentifier(
                "vtable"
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        VoidType(),
        "add2Vtable",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              null
            ),
            null,
            "add",
            null
          )
        ),
        null,
        null,
        Block(
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "add"
              ),
              "=",
              CallExpression(
                null,
                null,
                "format",
                Arguments(
                  PrimaryIdentifier(
                    "add"
                  ),
                  ThisExpression(
                    null
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            CallExpression(
              PrimaryIdentifier(
                "add"
              ),
              null,
              "matches",
              Arguments(
                StringLiteral(
                  "\".*\\\\(\\\\*.*\\\\)\\\\(.*\\\\).*\""
                )
              )
            ),
            Block(
              FieldDeclaration(
                Modifiers(),
                Type(
                  QualifiedIdentifier(
                    "String"
                  ),
                  null
                ),
                Declarators(
                  Declarator(
                    "sig",
                    null,
                    SubscriptExpression(
                      CallExpression(
                        PrimaryIdentifier(
                          "add"
                        ),
                        null,
                        "split",
                        Arguments(
                          StringLiteral(
                            "\"([\\\\w\\\\s]*\\\\(\\\\*)|(\\\\)\\\\(.*)\""
                          )
                        )
                      ),
                      IntegerLiteral(
                        "1"
                      )
                    )
                  )
                )
              ),
              FieldDeclaration(
                Modifiers(),
                Type(
                  PrimitiveType(
                    "int"
                  ),
                  null
                ),
                Declarators(
                  Declarator(
                    "index",
                    null,
                    UnaryExpression(
                      "-",
                      IntegerLiteral(
                        "1"
                      )
                    )
                  )
                )
              ),
              ForStatement(
                BasicForControl(
                  Modifiers(),
                  Type(
                    PrimitiveType(
                      "int"
                    ),
                    null
                  ),
                  Declarators(
                    Declarator(
                      "i",
                      null,
                      IntegerLiteral(
                        "0"
                      )
                    )
                  ),
                  RelationalExpression(
                    PrimaryIdentifier(
                      "i"
                    ),
                    "<",
                    CallExpression(
                      SelectionExpression(
                        ThisExpression(
                          null
                        ),
                        "vtable"
                      ),
                      null,
                      "size",
                      Arguments()
                    )
                  ),
                  ExpressionList(
                    PostfixExpression(
                      PrimaryIdentifier(
                        "i"
                      ),
                      "++"
                    )
                  )
                ),
                Block(
                  ConditionalStatement(
                    LogicalAndExpression(
                      CallExpression(
                        CallExpression(
                          SelectionExpression(
                            ThisExpression(
                              null
                            ),
                            "vtable"
                          ),
                          null,
                          "get",
                          Arguments(
                            PrimaryIdentifier(
                              "i"
                            )
                          )
                        ),
                        null,
                        "matches",
                        Arguments(
                          StringLiteral(
                            "\".*\\\\(\\\\*.*\\\\)\\\\(.*\\\\).*\""
                          )
                        )
                      ),
                      CallExpression(
                        SubscriptExpression(
                          CallExpression(
                            CallExpression(
                              SelectionExpression(
                                ThisExpression(
                                  null
                                ),
                                "vtable"
                              ),
                              null,
                              "get",
                              Arguments(
                                PrimaryIdentifier(
                                  "i"
                                )
                              )
                            ),
                            null,
                            "split",
                            Arguments(
                              StringLiteral(
                                "\"([\\\\w\\\\s]*\\\\(\\\\*)|(\\\\)\\\\(.*)\""
                              )
                            )
                          ),
                          IntegerLiteral(
                            "1"
                          )
                        ),
                        null,
                        "equals",
                        Arguments(
                          PrimaryIdentifier(
                            "sig"
                          )
                        )
                      )
                    ),
                    Block(
                      ExpressionStatement(
                        Expression(
                          PrimaryIdentifier(
                            "index"
                          ),
                          "=",
                          PrimaryIdentifier(
                            "i"
                          )
                        )
                      )
                    ),
                    null
                  )
                )
              ),
              ConditionalStatement(
                EqualityExpression(
                  PrimaryIdentifier(
                    "index"
                  ),
                  "!=",
                  UnaryExpression(
                    "-",
                    IntegerLiteral(
                      "1"
                    )
                  )
                ),
                Block(
                  ExpressionStatement(
                    CallExpression(
                      SelectionExpression(
                        PrimaryIdentifier(
                          "System"
                        ),
                        "out"
                      ),
                      null,
                      "println",
                      Arguments(
                        AdditiveExpression(
                          AdditiveExpression(
                            AdditiveExpression(
                              StringLiteral(
                                "\"==========OVERWRITING \""
                              ),
                              "+",
                              PrimaryIdentifier(
                                "sig"
                              )
                            ),
                            "+",
                            StringLiteral(
                              "\"in \""
                            )
                          ),
                          "+",
                          SelectionExpression(
                            ThisExpression(
                              null
                            ),
                            "name"
                          )
                        )
                      )
                    )
                  ),
                  ExpressionStatement(
                    CallExpression(
                      SelectionExpression(
                        ThisExpression(
                          null
                        ),
                        "vtable"
                      ),
                      null,
                      "set",
                      Arguments(
                        PrimaryIdentifier(
                          "index"
                        ),
                        AdditiveExpression(
                          PrimaryIdentifier(
                            "add"
                          ),
                          "+",
                          StringLiteral(
                            "\"\\t\""
                          )
                        )
                      )
                    )
                  )
                ),
                Block(
                  ExpressionStatement(
                    CallExpression(
                      SelectionExpression(
                        ThisExpression(
                          null
                        ),
                        "vtable"
                      ),
                      null,
                      "add",
                      Arguments(
                        PrimaryIdentifier(
                          "add"
                        )
                      )
                    )
                  )
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    ThisExpression(
                      null
                    ),
                    "vtable"
                  ),
                  null,
                  "add",
                  Arguments(
                    PrimaryIdentifier(
                      "add"
                    )
                  )
                )
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          InstantiatedType(
            TypeInstantiation(
              "ArrayList",
              TypeArguments(
                Type(
                  QualifiedIdentifier(
                    "String"
                  ),
                  null
                )
              )
            )
          ),
          null
        ),
        "getVtable",
        FormalParameters(),
        null,
        null,
        Block(
          ReturnStatement(
            SelectionExpression(
              ThisExpression(
                null
              ),
              "vtable"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        VoidType(),
        "printVtable",
        FormalParameters(),
        null,
        null,
        Block(
          ExpressionStatement(
            CallExpression(
              SelectionExpression(
                PrimaryIdentifier(
                  "System"
                ),
                "out"
              ),
              null,
              "println",
              Arguments(
                StringLiteral(
                  "\"================================\""
                )
              )
            )
          ),
          ExpressionStatement(
            CallExpression(
              SelectionExpression(
                PrimaryIdentifier(
                  "System"
                ),
                "out"
              ),
              null,
              "println",
              Arguments(
                AdditiveExpression(
                  SelectionExpression(
                    ThisExpression(
                      null
                    ),
                    "name"
                  ),
                  "+",
                  StringLiteral(
                    "\"\'s vtable:\""
                  )
                )
              )
            )
          ),
          ForStatement(
            EnhancedForControl(
              Modifiers(),
              Type(
                QualifiedIdentifier(
                  "String"
                ),
                null
              ),
              "s",
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "vtable"
              )
            ),
            ExpressionStatement(
              CallExpression(
                SelectionExpression(
                  PrimaryIdentifier(
                    "System"
                  ),
                  "out"
                ),
                null,
                "println",
                Arguments(
                  PrimaryIdentifier(
                    "s"
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            CallExpression(
              SelectionExpression(
                PrimaryIdentifier(
                  "System"
                ),
                "out"
              ),
              null,
              "println",
              Arguments(
                StringLiteral(
                  "\"================================\""
                )
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        VoidType(),
        "setDataFields",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              Dimensions(
                "["
              )
            ),
            null,
            "dataFields",
            null
          )
        ),
        null,
        null,
        Block(
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "dataFields"
              ),
              "==",
              NullLiteral()
            ),
            Block(
              ReturnStatement(
                null
              )
            ),
            null
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              PrimitiveType(
                "int"
              ),
              null
            ),
            Declarators(
              Declarator(
                "r_length",
                null,
                IntegerLiteral(
                  "0"
                )
              )
            )
          ),
          ForStatement(
            BasicForControl(
              Modifiers(),
              Type(
                PrimitiveType(
                  "int"
                ),
                null
              ),
              Declarators(
                Declarator(
                  "i",
                  null,
                  IntegerLiteral(
                    "0"
                  )
                )
              ),
              RelationalExpression(
                PrimaryIdentifier(
                  "i"
                ),
                "<",
                SelectionExpression(
                  PrimaryIdentifier(
                    "dataFields"
                  ),
                  "length"
                )
              ),
              ExpressionList(
                PostfixExpression(
                  PrimaryIdentifier(
                    "i"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ConditionalStatement(
                LogicalNegationExpression(
                  CallExpression(
                    SubscriptExpression(
                      PrimaryIdentifier(
                        "dataFields"
                      ),
                      PrimaryIdentifier(
                        "i"
                      )
                    ),
                    null,
                    "equals",
                    Arguments(
                      StringLiteral(
                        "\"\""
                      )
                    )
                  )
                ),
                ExpressionStatement(
                  PostfixExpression(
                    PrimaryIdentifier(
                      "r_length"
                    ),
                    "++"
                  )
                ),
                null
              )
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              Dimensions(
                "["
              )
            ),
            Declarators(
              Declarator(
                "temp",
                null,
                NewArrayExpression(
                  QualifiedIdentifier(
                    "String"
                  ),
                  ConcreteDimensions(
                    PrimaryIdentifier(
                      "r_length"
                    )
                  ),
                  null,
                  null
                )
              )
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              PrimitiveType(
                "int"
              ),
              null
            ),
            Declarators(
              Declarator(
                "temp_i",
                null,
                IntegerLiteral(
                  "0"
                )
              )
            )
          ),
          ForStatement(
            BasicForControl(
              Modifiers(),
              Type(
                PrimitiveType(
                  "int"
                ),
                null
              ),
              Declarators(
                Declarator(
                  "i",
                  null,
                  IntegerLiteral(
                    "0"
                  )
                )
              ),
              RelationalExpression(
                PrimaryIdentifier(
                  "i"
                ),
                "<",
                SelectionExpression(
                  PrimaryIdentifier(
                    "dataFields"
                  ),
                  "length"
                )
              ),
              ExpressionList(
                PostfixExpression(
                  PrimaryIdentifier(
                    "i"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                Expression(
                  SubscriptExpression(
                    PrimaryIdentifier(
                      "dataFields"
                    ),
                    PrimaryIdentifier(
                      "i"
                    )
                  ),
                  "=",
                  CallExpression(
                    SubscriptExpression(
                      PrimaryIdentifier(
                        "dataFields"
                      ),
                      PrimaryIdentifier(
                        "i"
                      )
                    ),
                    null,
                    "replaceAll",
                    Arguments(
                      StringLiteral(
                        "\"(?<!\\\\w)int(?!\\\\w)\""
                      ),
                      StringLiteral(
                        "\"int32_t\""
                      )
                    )
                  )
                )
              ),
              ExpressionStatement(
                Expression(
                  SubscriptExpression(
                    PrimaryIdentifier(
                      "dataFields"
                    ),
                    PrimaryIdentifier(
                      "i"
                    )
                  ),
                  "=",
                  CallExpression(
                    SubscriptExpression(
                      PrimaryIdentifier(
                        "dataFields"
                      ),
                      PrimaryIdentifier(
                        "i"
                      )
                    ),
                    null,
                    "replaceAll",
                    Arguments(
                      StringLiteral(
                        "\"(?<!\\\\w)boolean(?!\\\\w)\""
                      ),
                      StringLiteral(
                        "\"bool\""
                      )
                    )
                  )
                )
              ),
              ExpressionStatement(
                Expression(
                  SubscriptExpression(
                    PrimaryIdentifier(
                      "dataFields"
                    ),
                    PrimaryIdentifier(
                      "i"
                    )
                  ),
                  "=",
                  CallExpression(
                    SubscriptExpression(
                      PrimaryIdentifier(
                        "dataFields"
                      ),
                      PrimaryIdentifier(
                        "i"
                      )
                    ),
                    null,
                    "replaceAll",
                    Arguments(
                      StringLiteral(
                        "\"(?<!\\\\w)final(?!\\\\w)\""
                      ),
                      StringLiteral(
                        "\"const\""
                      )
                    )
                  )
                )
              ),
              ConditionalStatement(
                LogicalNegationExpression(
                  CallExpression(
                    SubscriptExpression(
                      PrimaryIdentifier(
                        "dataFields"
                      ),
                      PrimaryIdentifier(
                        "i"
                      )
                    ),
                    null,
                    "equals",
                    Arguments(
                      StringLiteral(
                        "\"\""
                      )
                    )
                  )
                ),
                Block(
                  ExpressionStatement(
                    Expression(
                      SubscriptExpression(
                        PrimaryIdentifier(
                          "temp"
                        ),
                        PostfixExpression(
                          PrimaryIdentifier(
                            "temp_i"
                          ),
                          "++"
                        )
                      ),
                      "=",
                      AdditiveExpression(
                        SubscriptExpression(
                          PrimaryIdentifier(
                            "dataFields"
                          ),
                          PrimaryIdentifier(
                            "i"
                          )
                        ),
                        "+",
                        StringLiteral(
                          "\";\""
                        )
                      )
                    )
                  )
                ),
                null
              )
            )
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "dataFields"
              ),
              "=",
              PrimaryIdentifier(
                "temp"
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "String"
          ),
          Dimensions(
            "["
          )
        ),
        "getDataFields",
        FormalParameters(),
        null,
        null,
        Block(
          ReturnStatement(
            SelectionExpression(
              ThisExpression(
                null
              ),
              "dataFields"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "String"
          ),
          null
        ),
        "getName",
        FormalParameters(),
        null,
        null,
        Block(
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "name"
              ),
              "==",
              NullLiteral()
            ),
            Block(
              ReturnStatement(
                StringLiteral(
                  "\"No Name\""
                )
              )
            ),
            null
          ),
          ReturnStatement(
            PrimaryIdentifier(
              "name"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Bubble"
          ),
          null
        ),
        "getParent",
        FormalParameters(),
        null,
        null,
        Block(
          ReturnStatement(
            PrimaryIdentifier(
              "parent"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        VoidType(),
        "setParent",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Bubble"
              ),
              null
            ),
            null,
            "parent",
            null
          )
        ),
        null,
        null,
        Block(
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "parent"
              ),
              "==",
              NullLiteral()
            ),
            Block(
              ReturnStatement(
                null
              )
            ),
            null
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "parent"
              ),
              "=",
              PrimaryIdentifier(
                "parent"
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        VoidType(),
        "setChildren",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              Dimensions(
                "["
              )
            ),
            null,
            "children",
            null
          )
        ),
        null,
        null,
        Block(
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "children"
              ),
              "==",
              NullLiteral()
            ),
            Block(
              ReturnStatement(
                null
              )
            ),
            null
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "children"
              ),
              "=",
              PrimaryIdentifier(
                "children"
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "String"
          ),
          Dimensions(
            "["
          )
        ),
        "getChildren",
        FormalParameters(),
        null,
        null,
        Block(
          ReturnStatement(
            SelectionExpression(
              ThisExpression(
                null
              ),
              "children"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        VoidType(),
        "setVtableIndex",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              PrimitiveType(
                "int"
              ),
              null
            ),
            null,
            "i",
            null
          ),
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              null
            ),
            null,
            "s",
            null
          )
        ),
        null,
        null,
        Block(
          ExpressionStatement(
            CallExpression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "vtable"
              ),
              null,
              "set",
              Arguments(
                PrimaryIdentifier(
                  "i"
                ),
                PrimaryIdentifier(
                  "s"
                )
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        VoidType(),
        "addChild",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              null
            ),
            null,
            "child",
            null
          )
        ),
        null,
        null,
        Block(
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "child"
              ),
              "==",
              NullLiteral()
            ),
            Block(
              ReturnStatement(
                null
              )
            ),
            null
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              PrimitiveType(
                "int"
              ),
              null
            ),
            Declarators(
              Declarator(
                "len",
                null,
                ConditionalExpression(
                  EqualityExpression(
                    PrimaryIdentifier(
                      "children"
                    ),
                    "==",
                    NullLiteral()
                  ),
                  IntegerLiteral(
                    "1"
                  ),
                  AdditiveExpression(
                    SelectionExpression(
                      PrimaryIdentifier(
                        "children"
                      ),
                      "length"
                    ),
                    "+",
                    IntegerLiteral(
                      "1"
                    )
                  )
                )
              )
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              Dimensions(
                "["
              )
            ),
            Declarators(
              Declarator(
                "temp",
                null,
                NewArrayExpression(
                  QualifiedIdentifier(
                    "String"
                  ),
                  ConcreteDimensions(
                    PrimaryIdentifier(
                      "len"
                    )
                  ),
                  null,
                  null
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "children"
              ),
              "==",
              NullLiteral()
            ),
            Block(
              ExpressionStatement(
                Expression(
                  SubscriptExpression(
                    PrimaryIdentifier(
                      "temp"
                    ),
                    IntegerLiteral(
                      "0"
                    )
                  ),
                  "=",
                  PrimaryIdentifier(
                    "child"
                  )
                )
              ),
              ExpressionStatement(
                Expression(
                  PrimaryIdentifier(
                    "children"
                  ),
                  "=",
                  PrimaryIdentifier(
                    "temp"
                  )
                )
              )
            ),
            Block(
              ForStatement(
                BasicForControl(
                  Modifiers(),
                  Type(
                    PrimitiveType(
                      "int"
                    ),
                    null
                  ),
                  Declarators(
                    Declarator(
                      "i",
                      null,
                      IntegerLiteral(
                        "0"
                      )
                    )
                  ),
                  RelationalExpression(
                    PrimaryIdentifier(
                      "i"
                    ),
                    "<",
                    SelectionExpression(
                      PrimaryIdentifier(
                        "children"
                      ),
                      "length"
                    )
                  ),
                  ExpressionList(
                    PostfixExpression(
                      PrimaryIdentifier(
                        "i"
                      ),
                      "++"
                    )
                  )
                ),
                Block(
                  ExpressionStatement(
                    Expression(
                      SubscriptExpression(
                        PrimaryIdentifier(
                          "temp"
                        ),
                        PrimaryIdentifier(
                          "i"
                        )
                      ),
                      "=",
                      SubscriptExpression(
                        PrimaryIdentifier(
                          "children"
                        ),
                        PrimaryIdentifier(
                          "i"
                        )
                      )
                    )
                  )
                )
              ),
              ExpressionStatement(
                Expression(
                  SubscriptExpression(
                    PrimaryIdentifier(
                      "temp"
                    ),
                    AdditiveExpression(
                      PrimaryIdentifier(
                        "len"
                      ),
                      "-",
                      IntegerLiteral(
                        "1"
                      )
                    )
                  ),
                  "=",
                  PrimaryIdentifier(
                    "child"
                  )
                )
              ),
              ExpressionStatement(
                Expression(
                  PrimaryIdentifier(
                    "children"
                  ),
                  "=",
                  PrimaryIdentifier(
                    "temp"
                  )
                )
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "String"
          ),
          null
        ),
        "childrenToString",
        FormalParameters(),
        null,
        null,
        Block(
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "children"
              ),
              "==",
              NullLiteral()
            ),
            Block(
              ReturnStatement(
                StringLiteral(
                  "\"No Children\""
                )
              )
            ),
            Block(
              FieldDeclaration(
                Modifiers(),
                Type(
                  QualifiedIdentifier(
                    "StringBuilder"
                  ),
                  null
                ),
                Declarators(
                  Declarator(
                    "s",
                    null,
                    NewClassExpression(
                      null,
                      null,
                      QualifiedIdentifier(
                        "StringBuilder"
                      ),
                      Arguments(
                        StringLiteral(
                          "\"[\""
                        )
                      ),
                      null
                    )
                  )
                )
              ),
              ForStatement(
                BasicForControl(
                  Modifiers(),
                  Type(
                    PrimitiveType(
                      "int"
                    ),
                    null
                  ),
                  Declarators(
                    Declarator(
                      "i",
                      null,
                      IntegerLiteral(
                        "0"
                      )
                    )
                  ),
                  RelationalExpression(
                    PrimaryIdentifier(
                      "i"
                    ),
                    "<",
                    SelectionExpression(
                      PrimaryIdentifier(
                        "children"
                      ),
                      "length"
                    )
                  ),
                  ExpressionList(
                    PostfixExpression(
                      PrimaryIdentifier(
                        "i"
                      ),
                      "++"
                    )
                  )
                ),
                Block(
                  ExpressionStatement(
                    CallExpression(
                      PrimaryIdentifier(
                        "s"
                      ),
                      null,
                      "append",
                      Arguments(
                        SubscriptExpression(
                          PrimaryIdentifier(
                            "children"
                          ),
                          PrimaryIdentifier(
                            "i"
                          )
                        )
                      )
                    )
                  ),
                  ConditionalStatement(
                    EqualityExpression(
                      PrimaryIdentifier(
                        "i"
                      ),
                      "!=",
                      AdditiveExpression(
                        SelectionExpression(
                          PrimaryIdentifier(
                            "children"
                          ),
                          "length"
                        ),
                        "-",
                        IntegerLiteral(
                          "1"
                        )
                      )
                    ),
                    ExpressionStatement(
                      CallExpression(
                        PrimaryIdentifier(
                          "s"
                        ),
                        null,
                        "append",
                        Arguments(
                          StringLiteral(
                            "\", \""
                          )
                        )
                      )
                    ),
                    null
                  )
                )
              ),
              ReturnStatement(
                CallExpression(
                  CallExpression(
                    PrimaryIdentifier(
                      "s"
                    ),
                    null,
                    "append",
                    Arguments(
                      StringLiteral(
                        "\"]\""
                      )
                    )
                  ),
                  null,
                  "toString",
                  Arguments()
                )
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "String"
          ),
          null
        ),
        "parentToString",
        FormalParameters(),
        null,
        null,
        Block(
          ConditionalStatement(
            EqualityExpression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "parent"
              ),
              "!=",
              NullLiteral()
            ),
            Block(
              ReturnStatement(
                CallExpression(
                  SelectionExpression(
                    ThisExpression(
                      null
                    ),
                    "parent"
                  ),
                  null,
                  "getName",
                  Arguments()
                )
              )
            ),
            Block(
              ReturnStatement(
                StringLiteral(
                  "\"No Parent\""
                )
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "String"
          ),
          null
        ),
        "toString",
        FormalParameters(),
        null,
        null,
        Block(
          FieldDeclaration(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "StringBuilder"
              ),
              null
            ),
            Declarators(
              Declarator(
                "s",
                null,
                NewClassExpression(
                  null,
                  null,
                  QualifiedIdentifier(
                    "StringBuilder"
                  ),
                  Arguments(
                    AdditiveExpression(
                      AdditiveExpression(
                        StringLiteral(
                          "\"Name: \""
                        ),
                        "+",
                        CallExpression(
                          null,
                          null,
                          "getName",
                          Arguments()
                        )
                      ),
                      "+",
                      StringLiteral(
                        "\"\\n\""
                      )
                    )
                  ),
                  null
                )
              )
            )
          ),
          ExpressionStatement(
            CallExpression(
              PrimaryIdentifier(
                "s"
              ),
              null,
              "append",
              Arguments(
                AdditiveExpression(
                  AdditiveExpression(
                    StringLiteral(
                      "\"Package: \""
                    ),
                    "+",
                    CallExpression(
                      null,
                      null,
                      "getPackageName",
                      Arguments()
                    )
                  ),
                  "+",
                  StringLiteral(
                    "\"\\n\""
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            CallExpression(
              PrimaryIdentifier(
                "s"
              ),
              null,
              "append",
              Arguments(
                AdditiveExpression(
                  AdditiveExpression(
                    StringLiteral(
                      "\"Children: \""
                    ),
                    "+",
                    CallExpression(
                      null,
                      null,
                      "childrenToString",
                      Arguments()
                    )
                  ),
                  "+",
                  StringLiteral(
                    "\"\\n\""
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            CallExpression(
              PrimaryIdentifier(
                "s"
              ),
              null,
              "append",
              Arguments(
                AdditiveExpression(
                  StringLiteral(
                    "\"Parent: \""
                  ),
                  "+",
                  CallExpression(
                    null,
                    null,
                    "parentToString",
                    Arguments()
                  )
                )
              )
            )
          ),
          ReturnStatement(
            CallExpression(
              PrimaryIdentifier(
                "s"
              ),
              null,
              "toString",
              Arguments()
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "String"
          ),
          null
        ),
        "format",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              null
            ),
            null,
            "method",
            null
          ),
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Bubble"
              ),
              null
            ),
            null,
            "b",
            null
          )
        ),
        null,
        null,
        Block(
          ConditionalStatement(
            CallExpression(
              PrimaryIdentifier(
                "method"
              ),
              null,
              "startsWith",
              Arguments(
                StringLiteral(
                  "\" \""
                )
              )
            ),
            Block(
              FieldDeclaration(
                Modifiers(),
                Type(
                  PrimitiveType(
                    "int"
                  ),
                  null
                ),
                Declarators(
                  Declarator(
                    "square",
                    null,
                    IntegerLiteral(
                      "0"
                    )
                  )
                )
              ),
              ForStatement(
                BasicForControl(
                  Modifiers(),
                  Type(
                    PrimitiveType(
                      "int"
                    ),
                    null
                  ),
                  Declarators(
                    Declarator(
                      "i",
                      null,
                      IntegerLiteral(
                        "0"
                      )
                    )
                  ),
                  RelationalExpression(
                    PrimaryIdentifier(
                      "i"
                    ),
                    "<",
                    CallExpression(
                      PrimaryIdentifier(
                        "method"
                      ),
                      null,
                      "length",
                      Arguments()
                    )
                  ),
                  ExpressionList(
                    PostfixExpression(
                      PrimaryIdentifier(
                        "i"
                      ),
                      "++"
                    )
                  )
                ),
                Block(
                  ConditionalStatement(
                    EqualityExpression(
                      CallExpression(
                        PrimaryIdentifier(
                          "method"
                        ),
                        null,
                        "charAt",
                        Arguments(
                          PrimaryIdentifier(
                            "i"
                          )
                        )
                      ),
                      "==",
                      CharacterLiteral(
                        "\'[\'"
                      )
                    ),
                    ExpressionStatement(
                      PostfixExpression(
                        PrimaryIdentifier(
                          "square"
                        ),
                        "++"
                      )
                    ),
                    null
                  )
                )
              ),
              FieldDeclaration(
                Modifiers(),
                Type(
                  QualifiedIdentifier(
                    "String"
                  ),
                  Dimensions(
                    "["
                  )
                ),
                Declarators(
                  Declarator(
                    "temp2",
                    null,
                    CallExpression(
                      PrimaryIdentifier(
                        "method"
                      ),
                      null,
                      "split",
                      Arguments(
                        StringLiteral(
                          "\" \""
                        )
                      )
                    )
                  )
                )
              ),
              FieldDeclaration(
                Modifiers(),
                Type(
                  PrimitiveType(
                    "int"
                  ),
                  null
                ),
                Declarators(
                  Declarator(
                    "count",
                    null,
                    IntegerLiteral(
                      "0"
                    )
                  )
                )
              ),
              ForStatement(
                BasicForControl(
                  Modifiers(),
                  Type(
                    PrimitiveType(
                      "int"
                    ),
                    null
                  ),
                  Declarators(
                    Declarator(
                      "j",
                      null,
                      IntegerLiteral(
                        "0"
                      )
                    )
                  ),
                  RelationalExpression(
                    PrimaryIdentifier(
                      "j"
                    ),
                    "<",
                    SelectionExpression(
                      PrimaryIdentifier(
                        "temp2"
                      ),
                      "length"
                    )
                  ),
                  ExpressionList(
                    PostfixExpression(
                      PrimaryIdentifier(
                        "j"
                      ),
                      "++"
                    )
                  )
                ),
                Block(
                  ConditionalStatement(
                    EqualityExpression(
                      CallExpression(
                        SubscriptExpression(
                          PrimaryIdentifier(
                            "temp2"
                          ),
                          PrimaryIdentifier(
                            "j"
                          )
                        ),
                        null,
                        "length",
                        Arguments()
                      ),
                      "!=",
                      IntegerLiteral(
                        "0"
                      )
                    ),
                    ExpressionStatement(
                      PostfixExpression(
                        PrimaryIdentifier(
                          "count"
                        ),
                        "++"
                      )
                    ),
                    null
                  )
                )
              ),
              FieldDeclaration(
                Modifiers(),
                Type(
                  QualifiedIdentifier(
                    "String"
                  ),
                  Dimensions(
                    "["
                  )
                ),
                Declarators(
                  Declarator(
                    "temp",
                    null,
                    NewArrayExpression(
                      QualifiedIdentifier(
                        "String"
                      ),
                      ConcreteDimensions(
                        AdditiveExpression(
                          PrimaryIdentifier(
                            "count"
                          ),
                          "-",
                          PrimaryIdentifier(
                            "square"
                          )
                        )
                      ),
                      null,
                      null
                    )
                  )
                )
              ),
              FieldDeclaration(
                Modifiers(),
                Type(
                  PrimitiveType(
                    "int"
                  ),
                  null
                ),
                Declarators(
                  Declarator(
                    "index",
                    null,
                    IntegerLiteral(
                      "0"
                    )
                  )
                )
              ),
              ForStatement(
                BasicForControl(
                  Modifiers(),
                  Type(
                    PrimitiveType(
                      "int"
                    ),
                    null
                  ),
                  Declarators(
                    Declarator(
                      "j",
                      null,
                      IntegerLiteral(
                        "0"
                      )
                    )
                  ),
                  RelationalExpression(
                    PrimaryIdentifier(
                      "j"
                    ),
                    "<",
                    SelectionExpression(
                      PrimaryIdentifier(
                        "temp2"
                      ),
                      "length"
                    )
                  ),
                  ExpressionList(
                    PostfixExpression(
                      PrimaryIdentifier(
                        "j"
                      ),
                      "++"
                    )
                  )
                ),
                Block(
                  ConditionalStatement(
                    EqualityExpression(
                      CallExpression(
                        SubscriptExpression(
                          PrimaryIdentifier(
                            "temp2"
                          ),
                          PrimaryIdentifier(
                            "j"
                          )
                        ),
                        null,
                        "length",
                        Arguments()
                      ),
                      "!=",
                      IntegerLiteral(
                        "0"
                      )
                    ),
                    Block(
                      ConditionalStatement(
                        EqualityExpression(
                          CallExpression(
                            SubscriptExpression(
                              PrimaryIdentifier(
                                "temp2"
                              ),
                              PrimaryIdentifier(
                                "j"
                              )
                            ),
                            null,
                            "charAt",
                            Arguments(
                              IntegerLiteral(
                                "0"
                              )
                            )
                          ),
                          "==",
                          CharacterLiteral(
                            "\'[\'"
                          )
                        ),
                        Block(
                          ExpressionStatement(
                            Expression(
                              SubscriptExpression(
                                PrimaryIdentifier(
                                  "temp"
                                ),
                                AdditiveExpression(
                                  PrimaryIdentifier(
                                    "index"
                                  ),
                                  "-",
                                  IntegerLiteral(
                                    "1"
                                  )
                                )
                              ),
                              "+=",
                              StringLiteral(
                                "\"[]\""
                              )
                            )
                          )
                        ),
                        Block(
                          ExpressionStatement(
                            Expression(
                              SubscriptExpression(
                                PrimaryIdentifier(
                                  "temp"
                                ),
                                PostfixExpression(
                                  PrimaryIdentifier(
                                    "index"
                                  ),
                                  "++"
                                )
                              ),
                              "=",
                              SubscriptExpression(
                                PrimaryIdentifier(
                                  "temp2"
                                ),
                                PrimaryIdentifier(
                                  "j"
                                )
                              )
                            )
                          )
                        )
                      )
                    ),
                    null
                  )
                )
              ),
              FieldDeclaration(
                Modifiers(),
                Type(
                  PrimitiveType(
                    "int"
                  ),
                  null
                ),
                Declarators(
                  Declarator(
                    "num",
                    null,
                    IntegerLiteral(
                      "0"
                    )
                  )
                )
              ),
              ForStatement(
                BasicForControl(
                  Modifiers(),
                  Type(
                    PrimitiveType(
                      "int"
                    ),
                    null
                  ),
                  Declarators(
                    Declarator(
                      "j",
                      null,
                      IntegerLiteral(
                        "0"
                      )
                    )
                  ),
                  RelationalExpression(
                    PrimaryIdentifier(
                      "j"
                    ),
                    "<",
                    SelectionExpression(
                      PrimaryIdentifier(
                        "temp"
                      ),
                      "length"
                    )
                  ),
                  ExpressionList(
                    PostfixExpression(
                      PrimaryIdentifier(
                        "j"
                      ),
                      "++"
                    )
                  )
                ),
                Block(
                  ConditionalStatement(
                    LogicalOrExpression(
                      LogicalOrExpression(
                        LogicalOrExpression(
                          LogicalOrExpression(
                            CallExpression(
                              SubscriptExpression(
                                PrimaryIdentifier(
                                  "temp"
                                ),
                                PrimaryIdentifier(
                                  "j"
                                )
                              ),
                              null,
                              "equals",
                              Arguments(
                                StringLiteral(
                                  "\"public\""
                                )
                              )
                            ),
                            CallExpression(
                              SubscriptExpression(
                                PrimaryIdentifier(
                                  "temp"
                                ),
                                PrimaryIdentifier(
                                  "j"
                                )
                              ),
                              null,
                              "equals",
                              Arguments(
                                StringLiteral(
                                  "\"private\""
                                )
                              )
                            )
                          ),
                          CallExpression(
                            SubscriptExpression(
                              PrimaryIdentifier(
                                "temp"
                              ),
                              PrimaryIdentifier(
                                "j"
                              )
                            ),
                            null,
                            "equals",
                            Arguments(
                              StringLiteral(
                                "\"protected\""
                              )
                            )
                          )
                        ),
                        CallExpression(
                          SubscriptExpression(
                            PrimaryIdentifier(
                              "temp"
                            ),
                            PrimaryIdentifier(
                              "j"
                            )
                          ),
                          null,
                          "equals",
                          Arguments(
                            StringLiteral(
                              "\"static\""
                            )
                          )
                        )
                      ),
                      CallExpression(
                        SubscriptExpression(
                          PrimaryIdentifier(
                            "temp"
                          ),
                          PrimaryIdentifier(
                            "j"
                          )
                        ),
                        null,
                        "equals",
                        Arguments(
                          StringLiteral(
                            "\"final\""
                          )
                        )
                      )
                    ),
                    Block(),
                    Block(
                      ExpressionStatement(
                        PostfixExpression(
                          PrimaryIdentifier(
                            "num"
                          ),
                          "++"
                        )
                      )
                    )
                  )
                )
              ),
              FieldDeclaration(
                Modifiers(),
                Type(
                  QualifiedIdentifier(
                    "String"
                  ),
                  null
                ),
                Declarators(
                  Declarator(
                    "s",
                    null,
                    StringLiteral(
                      "\"\""
                    )
                  )
                )
              ),
              ConditionalStatement(
                EqualityExpression(
                  MultiplicativeExpression(
                    PrimaryIdentifier(
                      "num"
                    ),
                    "%",
                    IntegerLiteral(
                      "2"
                    )
                  ),
                  "==",
                  IntegerLiteral(
                    "0"
                  )
                ),
                Block(
                  ExpressionStatement(
                    Expression(
                      PrimaryIdentifier(
                        "s"
                      ),
                      "+=",
                      AdditiveExpression(
                        SubscriptExpression(
                          PrimaryIdentifier(
                            "temp"
                          ),
                          AdditiveExpression(
                            SelectionExpression(
                              PrimaryIdentifier(
                                "temp"
                              ),
                              "length"
                            ),
                            "-",
                            PrimaryIdentifier(
                              "num"
                            )
                          )
                        ),
                        "+",
                        StringLiteral(
                          "\" \""
                        )
                      )
                    )
                  ),
                  ExpressionStatement(
                    Expression(
                      PrimaryIdentifier(
                        "index"
                      ),
                      "=",
                      AdditiveExpression(
                        AdditiveExpression(
                          SelectionExpression(
                            PrimaryIdentifier(
                              "temp"
                            ),
                            "length"
                          ),
                          "-",
                          PrimaryIdentifier(
                            "num"
                          )
                        ),
                        "+",
                        IntegerLiteral(
                          "1"
                        )
                      )
                    )
                  )
                ),
                Block(
                  ExpressionStatement(
                    Expression(
                      PrimaryIdentifier(
                        "s"
                      ),
                      "+=",
                      StringLiteral(
                        "\"void \""
                      )
                    )
                  ),
                  ExpressionStatement(
                    Expression(
                      PrimaryIdentifier(
                        "index"
                      ),
                      "=",
                      AdditiveExpression(
                        SelectionExpression(
                          PrimaryIdentifier(
                            "temp"
                          ),
                          "length"
                        ),
                        "-",
                        PrimaryIdentifier(
                          "num"
                        )
                      )
                    )
                  )
                )
              ),
              ExpressionStatement(
                Expression(
                  PrimaryIdentifier(
                    "s"
                  ),
                  "+=",
                  AdditiveExpression(
                    AdditiveExpression(
                      AdditiveExpression(
                        StringLiteral(
                          "\"(*\""
                        ),
                        "+",
                        SubscriptExpression(
                          PrimaryIdentifier(
                            "temp"
                          ),
                          AdditiveExpression(
                            SelectionExpression(
                              PrimaryIdentifier(
                                "temp"
                              ),
                              "length"
                            ),
                            "-",
                            IntegerLiteral(
                              "1"
                            )
                          )
                        )
                      ),
                      "+",
                      StringLiteral(
                        "\")(\""
                      )
                    ),
                    "+",
                    CallExpression(
                      PrimaryIdentifier(
                        "b"
                      ),
                      null,
                      "getName",
                      Arguments()
                    )
                  )
                )
              ),
              ForStatement(
                BasicForControl(
                  Modifiers(),
                  Type(
                    PrimitiveType(
                      "int"
                    ),
                    null
                  ),
                  Declarators(
                    Declarator(
                      "j",
                      null,
                      PrimaryIdentifier(
                        "index"
                      )
                    )
                  ),
                  RelationalExpression(
                    PrimaryIdentifier(
                      "j"
                    ),
                    "<",
                    AdditiveExpression(
                      SelectionExpression(
                        PrimaryIdentifier(
                          "temp"
                        ),
                        "length"
                      ),
                      "-",
                      IntegerLiteral(
                        "1"
                      )
                    )
                  ),
                  ExpressionList(
                    Expression(
                      PrimaryIdentifier(
                        "j"
                      ),
                      "+=",
                      IntegerLiteral(
                        "2"
                      )
                    )
                  )
                ),
                Block(
                  ExpressionStatement(
                    Expression(
                      PrimaryIdentifier(
                        "s"
                      ),
                      "+=",
                      AdditiveExpression(
                        StringLiteral(
                          "\", \""
                        ),
                        "+",
                        SubscriptExpression(
                          PrimaryIdentifier(
                            "temp"
                          ),
                          PrimaryIdentifier(
                            "j"
                          )
                        )
                      )
                    )
                  )
                )
              ),
              ExpressionStatement(
                Expression(
                  PrimaryIdentifier(
                    "s"
                  ),
                  "+=",
                  StringLiteral(
                    "\");\""
                  )
                )
              ),
              ReturnStatement(
                PrimaryIdentifier(
                  "s"
                )
              )
            ),
            null
          ),
          ReturnStatement(
            PrimaryIdentifier(
              "method"
            )
          )
        )
      )
    )
  )
)
