OOP Homework 1 --- Due 9/27 before class

Please email your solutions to Sathya Hariesh at shp322@nyu.edu.  Be
sure to use "OOP HW1 Solution" as the subject line.

Question 1 (10 Points):

Identify all language constructs in our translator's source language,
i.e., the restricted version of Java specified on the course home
page, which introduce a new programming language scope.  Your list
should start with classes:

   The body of class declarations


Answer 1:
	1. Body of class declarations
	2. Body of constructors
	3. Body of methods
	4. Blocks
	5. Body of for-loops
	6. Body of switch-statements
	7. Body of conditional-statements
	8. Body of do-while loops
	9. Bodies of try/catch/finally statements
	10. Body of while-loops



Question 2 (20 Points):

Write a small tool that reads in code written in our translator's
source language and, for each static scope, prints

   Enter scope at <filename>:<line>:<column> 

upon entering the scope and prints

   Exit scope at <filename>:<line>:<column>

upon exiting the scope.  Your tool should liberally reuse existing
xtc facilities, i.e., you will lose points for reimplementing existing
functionality.  You need to hand in your source code, an example input
file, and your tool's output on that file, which should demonstrate
that your tool works and is complete.


Answer 2:
	The tool is a modified Translator.java file, with visiting 
	methods invoked for each of the constructs listed above. 
	However, when using xtc's visitBlock method, blocks that are
	created by other constructs such as classes, loops, etc. 
	are counted a second time, but only if the blocks introduced 
	by these constructs are defined by curly braces. The other 
	option is to use visitBlockDeclaration, however this skips 
	over the block example in input.java. Neither of these is ideal, 
	so I produced outputs for both cases.

	Executing:
		Compile and run the Translator.java file as usual,
		but use -printHW1 as a flag.
	Files:
	-Translator.java: 	main homework file
	-input.java		test input
	-output1.txt		output, using visitBlockDeclaration
	-output2.txt		output, using visitBlock
	