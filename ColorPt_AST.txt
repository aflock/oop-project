Java Scope Analyzer, v. 2.1.1, My Group
Processing ../oop_project/ColorPt.java ...
CompilationUnit(
  null,
  ImportDeclaration(
    null,
    QualifiedIdentifier(
      "xtc",
      "oop",
      "helper",
      "Bubble"
    ),
    null
  ),
  ClassDeclaration(
    Modifiers(),
    "Pt",
    null,
    null,
    null,
    ClassBody(
      ConstructorDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        "Pt",
        FormalParameters(),
        null,
        Block()
      )
    )
  ),
  ClassDeclaration(
    Modifiers(),
    "ColorPt",
    null,
    Extension(
      Type(
        QualifiedIdentifier(
          "Pt"
        ),
        null
      )
    ),
    null,
    ClassBody(
      FieldDeclaration(
        Modifiers(
          Modifier(
            "final"
          )
        ),
        Type(
          QualifiedIdentifier(
            "String"
          ),
          null
        ),
        Declarators(
          Declarator(
            "color",
            null,
            null
          )
        )
      ),
      ConstructorDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        "ColorPt",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              null
            ),
            null,
            "color",
            null
          )
        ),
        null,
        Block(
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "color"
              ),
              "=",
              PrimaryIdentifier(
                "color"
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "String"
          ),
          null
        ),
        "getColor",
        FormalParameters(),
        null,
        null,
        Block(
          ReturnStatement(
            PrimaryIdentifier(
              "color"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        VoidType(),
        "setColor",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              null
            ),
            null,
            "color",
            null
          )
        ),
        null,
        null,
        Block(
          ExpressionStatement(
            Expression(
              SelectionExpression(
                ThisExpression(
                  null
                ),
                "color"
              ),
              "=",
              PrimaryIdentifier(
                "color"
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          PrimitiveType(
            "int"
          ),
          null
        ),
        "addition",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              PrimitiveType(
                "int"
              ),
              null
            ),
            null,
            "a",
            null
          ),
          FormalParameter(
            Modifiers(),
            Type(
              PrimitiveType(
                "int"
              ),
              null
            ),
            null,
            "b",
            null
          )
        ),
        null,
        null,
        Block(
          FieldDeclaration(
            Modifiers(),
            Type(
              PrimitiveType(
                "int"
              ),
              null
            ),
            Declarators(
              Declarator(
                "c",
                null,
                AdditiveExpression(
                  PrimaryIdentifier(
                    "a"
                  ),
                  "+",
                  PrimaryIdentifier(
                    "b"
                  )
                )
              )
            )
          ),
          ReturnStatement(
            PrimaryIdentifier(
              "c"
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Integer"
              ),
              null
            ),
            Declarators(
              Declarator(
                "theInt",
                null,
                NewClassExpression(
                  null,
                  null,
                  QualifiedIdentifier(
                    "Integer"
                  ),
                  Arguments(
                    PrimaryIdentifier(
                      "c"
                    )
                  ),
                  null
                )
              )
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              PrimitiveType(
                "int"
              ),
              null
            ),
            Declarators(
              Declarator(
                "g",
                null,
                CallExpression(
                  PrimaryIdentifier(
                    "theInt"
                  ),
                  null,
                  "hashCode",
                  Arguments()
                )
              )
            )
          ),
          ExpressionStatement(
            CallExpression(
              SelectionExpression(
                PrimaryIdentifier(
                  "System"
                ),
                "out"
              ),
              null,
              "println",
              Arguments(
                PrimaryIdentifier(
                  "g"
                )
              )
            )
          )
        )
      )
    )
  )
)
